#############################################################################
# Makefile for building: LEDControl
# Generated by qmake (3.0) (Qt 5.3.2)
# Project:  LEDControl.pro
# Template: app
# Command: /usr/lib/arm-linux-gnueabihf/qt5/bin/qmake -spec linux-g++ CONFIG+=debug -o Makefile LEDControl.pro
#############################################################################

MAKEFILE      = Makefile

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = 
CFLAGS        = -pipe -g -Wall -W -fPIE $(DEFINES)
CXXFLAGS      = -pipe -g -std=c++0x -Wall -W -fPIE $(DEFINES)
INCPATH       = -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  
AR            = ar cqs
RANLIB        = 
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		domain/led.cpp \
		commands/abstractcommand.cpp \
		commands/getledstate.cpp \
		commands/setledstate.cpp \
		commandreceiver.cpp \
		commands/getledcolor.cpp \
		commands/setledcolor.cpp \
		pipemanager.cpp \
		commands/setledrate.cpp \
		commands/getledrate.cpp 
OBJECTS       = main.o \
		led.o \
		abstractcommand.o \
		getledstate.o \
		setledstate.o \
		commandreceiver.o \
		getledcolor.o \
		setledcolor.o \
		pipemanager.o \
		setledrate.o \
		getledrate.o
DIST          =  main.cpp \
		domain/led.cpp \
		commands/abstractcommand.cpp \
		commands/getledstate.cpp \
		commands/setledstate.cpp \
		commandreceiver.cpp \
		commands/getledcolor.cpp \
		commands/setledcolor.cpp \
		pipemanager.cpp \
		commands/setledrate.cpp \
		commands/getledrate.cpp
QMAKE_TARGET  = LEDControl
DESTDIR       = #avoid trailing-slash linebreak
TARGET        = LEDControl


first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

dist: 
	@test -d .tmp/LEDControl1.0.0 || mkdir -p .tmp/LEDControl1.0.0
	$(COPY_FILE) --parents $(DIST) .tmp/LEDControl1.0.0/ && (cd `dirname .tmp/LEDControl1.0.0` && $(TAR) LEDControl1.0.0.tar LEDControl1.0.0 && $(COMPRESS) LEDControl1.0.0.tar) && $(MOVE) `dirname .tmp/LEDControl1.0.0`/LEDControl1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/LEDControl1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


distclean: clean 
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


####### Sub-libraries

check: first

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

main.o: main.cpp domain/led.h \
		commandreceiver.h \
		commands/getledstate.h \
		commands/abstractcommand.h \
		commands/setledstate.h \
		commands/getledcolor.h \
		commands/setledcolor.h \
		commands/setledrate.h \
		commands/getledrate.h \
		pipemanager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

led.o: domain/led.cpp domain/led.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o led.o domain/led.cpp

abstractcommand.o: commands/abstractcommand.cpp commands/abstractcommand.h \
		domain/led.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o abstractcommand.o commands/abstractcommand.cpp

getledstate.o: commands/getledstate.cpp commands/getledstate.h \
		commands/abstractcommand.h \
		domain/led.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o getledstate.o commands/getledstate.cpp

setledstate.o: commands/setledstate.cpp commands/setledstate.h \
		commands/abstractcommand.h \
		domain/led.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o setledstate.o commands/setledstate.cpp

commandreceiver.o: commandreceiver.cpp commandreceiver.h \
		commands/getledstate.h \
		commands/abstractcommand.h \
		domain/led.h \
		commands/setledstate.h \
		commands/getledcolor.h \
		commands/setledcolor.h \
		commands/setledrate.h \
		commands/getledrate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o commandreceiver.o commandreceiver.cpp

getledcolor.o: commands/getledcolor.cpp commands/getledcolor.h \
		commands/abstractcommand.h \
		domain/led.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o getledcolor.o commands/getledcolor.cpp

setledcolor.o: commands/setledcolor.cpp commands/setledcolor.h \
		commands/abstractcommand.h \
		domain/led.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o setledcolor.o commands/setledcolor.cpp

pipemanager.o: pipemanager.cpp pipemanager.h \
		commandreceiver.h \
		commands/getledstate.h \
		commands/abstractcommand.h \
		domain/led.h \
		commands/setledstate.h \
		commands/getledcolor.h \
		commands/setledcolor.h \
		commands/setledrate.h \
		commands/getledrate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pipemanager.o pipemanager.cpp

setledrate.o: commands/setledrate.cpp commands/setledrate.h \
		commands/abstractcommand.h \
		domain/led.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o setledrate.o commands/setledrate.cpp

getledrate.o: commands/getledrate.cpp commands/getledrate.h \
		commands/abstractcommand.h \
		domain/led.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o getledrate.o commands/getledrate.cpp

####### Install

install_target: first FORCE
	@test -d $(INSTALL_ROOT)/opt/LEDControl/bin || mkdir -p $(INSTALL_ROOT)/opt/LEDControl/bin
	-$(INSTALL_PROGRAM) "$(QMAKE_TARGET)" "$(INSTALL_ROOT)/opt/LEDControl/bin/$(QMAKE_TARGET)"

uninstall_target: FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/opt/LEDControl/bin/$(QMAKE_TARGET)"
	-$(DEL_DIR) $(INSTALL_ROOT)/opt/LEDControl/bin/ 


install:  install_target  FORCE

uninstall: uninstall_target   FORCE

FORCE:

